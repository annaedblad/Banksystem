@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    <li class="nav-item">
        <a class="nav-link text-dark " asp-controller="Home" asp-action="About">About</a>
    </li>

    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Customer" asp-action="SearchForCustomer">Search customer</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Customer" asp-action="SelectCustomer">Administer Customers</a>
        </li>
        @if (User.IsInRole("Admin"))
        {
            <li>
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="Index" title="Admin"><i class="fa fa-user-o"></i> Administer Users</a>
            </li>
        }
<li class="nav-item">
    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <a id="logout" class="nav-link text-dark">Logout</a>
    </form>

</li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark " asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }



</ul>
